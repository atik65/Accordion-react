{"version":3,"sources":["components/Question.jsx","components/data.js","components/Accordion.jsx","App.js","reportWebVitals.js","index.js"],"names":["Question","ques","useState","showAns","setShowAns","question","ans","className","onClick","e","class","data","id","Accordion","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMA4BeA,EA1BE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAKQC,EAAkBJ,EAAlBI,SAAUC,EAAQL,EAARK,IAClB,OACE,mCACE,sBAAKC,UAAU,gBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,4BAAIF,IACJ,wBAAQG,QATG,SAACC,GAClBL,GAAYD,IAQN,SACGA,EACC,mBAAGO,MAAM,qBAET,mBAAGA,MAAM,yBAIf,qBAAKH,UAAU,MAAf,SAAsBJ,EAAU,4BAAIG,IAAW,WCMxCK,EA5BF,CACX,CACEC,GAAI,EACJP,SAAU,gBACVC,IAAK,+JAEP,CACEM,GAAI,EACJP,SAAU,gBACVC,IAAK,+JAEP,CACEM,GAAI,EACJP,SAAU,kBACVC,IAAK,gKAEP,CACEM,GAAI,EACJP,SAAU,iBACVC,IAAK,+JAEP,CACEM,GAAI,EACJP,SAAU,iBACVC,IAAK,gKCAMO,EApBG,WAChB,OACE,mCACE,uBAAMN,UAAU,YAAhB,UACE,qBAAKA,UAAU,iBAAf,SACE,8EAEE,yDAGJ,qBAAKA,UAAU,kBAAf,SACGI,EAAKG,KAAI,SAACb,GACT,OAAO,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKW,eCLxBG,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.699fbd91.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Question = ({ ques }) => {\r\n  const [showAns, setShowAns] = useState(false);\r\n\r\n  let handleChange = (e) => {\r\n    setShowAns(!showAns);\r\n  };\r\n  const { question, ans } = ques;\r\n  return (\r\n    <>\r\n      <div className=\"question-card\">\r\n        <div className=\"question\">\r\n          <p>{question}</p>\r\n          <button onClick={handleChange}>\r\n            {showAns ? (\r\n              <i class=\"fas fa-minus    \"></i>\r\n            ) : (\r\n              <i class=\"fas fa-plus    \"></i>\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div className=\"ans\">{showAns ? <p>{ans}</p> : \"\"}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","const data = [\r\n  {\r\n    id: 1,\r\n    question: \"Question One?\",\r\n    ans: \" Ans One Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni delectus optio libero suscipit repellendus debitis sit incidunt distinctio quam in!\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"Question Two?\",\r\n    ans: \" Ans Two Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni delectus optio libero suscipit repellendus debitis sit incidunt distinctio quam in!\",\r\n  },\r\n  {\r\n    id: 3,\r\n    question: \"Question Three?\",\r\n    ans: \"Ans Three Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni delectus optio libero suscipit repellendus debitis sit incidunt distinctio quam in!\",\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Question Four?\",\r\n    ans: \"Ans Four Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni delectus optio libero suscipit repellendus debitis sit incidunt distinctio quam in!\",\r\n  },\r\n  {\r\n    id: 5,\r\n    question: \"Question Five?\",\r\n    ans: \"Ans Five Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni delectus optio libero suscipit repellendus debitis sit incidunt distinctio quam in!\",\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from \"react\";\r\nimport Question from \"./Question\";\r\nimport data from \"./data\";\r\n\r\nconst Accordion = () => {\r\n  return (\r\n    <>\r\n      <main className=\"accordion\">\r\n        <div className=\"accordion-left\">\r\n          <p>\r\n            Here are some Common Question's and Answer's.\r\n            <span> Have a Look... </span>\r\n          </p>\r\n        </div>\r\n        <div className=\"accordion-right\">\r\n          {data.map((ques) => {\r\n            return <Question key={ques.id} ques={ques} />;\r\n          })}\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import \"./App.css\";\nimport Accordion from \"./components/Accordion\";\n\nfunction App() {\n  return (\n    <>\n      <Accordion />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}